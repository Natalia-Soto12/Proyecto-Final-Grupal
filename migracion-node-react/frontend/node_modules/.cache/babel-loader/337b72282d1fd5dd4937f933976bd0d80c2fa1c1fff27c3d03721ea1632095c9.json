{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DPC\\\\Desktop\\\\sistema-ventas\\\\migracion-node-react\\\\frontend\\\\src\\\\pages\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [admins, setAdmins] = useState([]);\n  const [error, setError] = useState(null);\n  const [newAdminName, setNewAdminName] = useState('');\n  const [newAdminPass1, setNewAdminPass1] = useState('');\n  const [newAdminPass2, setNewAdminPass2] = useState('');\n  const [refresh, setRefresh] = useState(false);\n  useEffect(() => {\n    fetch('/api/admin/list') // Assuming an endpoint to list admins\n    .then(res => res.json()).then(data => setAdmins(data)).catch(() => setError('Error al cargar administradores'));\n  }, [refresh]);\n  const handleRegister = async e => {\n    e.preventDefault();\n    if (newAdminPass1 !== newAdminPass2) {\n      alert('Las contraseñas no coinciden');\n      return;\n    }\n    try {\n      const response = await fetch('/api/admin/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          adminName: newAdminName,\n          adminPass1: newAdminPass1,\n          adminPass2: newAdminPass2\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert('Administrador registrado con éxito');\n        setNewAdminName('');\n        setNewAdminPass1('');\n        setNewAdminPass2('');\n        setRefresh(!refresh);\n      } else {\n        alert(data.error || 'Error al registrar administrador');\n      }\n    } catch {\n      alert('Error de conexión');\n    }\n  };\n  const handleDelete = async id => {\n    if (!window.confirm('¿Seguro que quieres eliminar este administrador?')) return;\n    try {\n      const response = await fetch(`/api/admin/${id}`, {\n        method: 'DELETE'\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert('Administrador eliminado con éxito');\n        setRefresh(!refresh);\n      } else {\n        alert(data.error || 'Error al eliminar administrador');\n      }\n    } catch {\n      alert('Error de conexión');\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Panel de Administraci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Registrar Nuevo Administrador\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nombre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newAdminName,\n          onChange: e => setNewAdminName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Contrase\\xF1a:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: newAdminPass1,\n          onChange: e => setNewAdminPass1(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirmar Contrase\\xF1a:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: newAdminPass2,\n          onChange: e => setNewAdminPass2(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          marginTop: '10px'\n        },\n        children: \"Registrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Administradores Registrados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyle: 'none',\n        padding: 0\n      },\n      children: admins.map(admin => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          marginBottom: '10px',\n          border: '1px solid #ccc',\n          padding: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Nombre: \", admin.Nombre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(admin.id),\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, admin.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"AtQQK3d8z5D9EsSKucx7fSq6jwU=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AdminDashboard","_s","admins","setAdmins","error","setError","newAdminName","setNewAdminName","newAdminPass1","setNewAdminPass1","newAdminPass2","setNewAdminPass2","refresh","setRefresh","fetch","then","res","json","data","catch","handleRegister","e","preventDefault","alert","response","method","headers","body","JSON","stringify","adminName","adminPass1","adminPass2","ok","handleDelete","id","window","confirm","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","onSubmit","marginBottom","type","value","onChange","target","required","marginTop","listStyle","map","admin","border","Nombre","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DPC/Desktop/sistema-ventas/migracion-node-react/frontend/src/pages/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst AdminDashboard = () => {\r\n  const [admins, setAdmins] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [newAdminName, setNewAdminName] = useState('');\r\n  const [newAdminPass1, setNewAdminPass1] = useState('');\r\n  const [newAdminPass2, setNewAdminPass2] = useState('');\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch('/api/admin/list') // Assuming an endpoint to list admins\r\n      .then(res => res.json())\r\n      .then(data => setAdmins(data))\r\n      .catch(() => setError('Error al cargar administradores'));\r\n  }, [refresh]);\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    if (newAdminPass1 !== newAdminPass2) {\r\n      alert('Las contraseñas no coinciden');\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch('/api/admin/register', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          adminName: newAdminName,\r\n          adminPass1: newAdminPass1,\r\n          adminPass2: newAdminPass2\r\n        }),\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        alert('Administrador registrado con éxito');\r\n        setNewAdminName('');\r\n        setNewAdminPass1('');\r\n        setNewAdminPass2('');\r\n        setRefresh(!refresh);\r\n      } else {\r\n        alert(data.error || 'Error al registrar administrador');\r\n      }\r\n    } catch {\r\n      alert('Error de conexión');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm('¿Seguro que quieres eliminar este administrador?')) return;\r\n    try {\r\n      const response = await fetch(`/api/admin/${id}`, { method: 'DELETE' });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        alert('Administrador eliminado con éxito');\r\n        setRefresh(!refresh);\r\n      } else {\r\n        alert(data.error || 'Error al eliminar administrador');\r\n      }\r\n    } catch {\r\n      alert('Error de conexión');\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    return <p>{error}</p>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h2>Panel de Administración</h2>\r\n      <form onSubmit={handleRegister} style={{ marginBottom: '20px' }}>\r\n        <h3>Registrar Nuevo Administrador</h3>\r\n        <div>\r\n          <label>Nombre:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={newAdminName}\r\n            onChange={(e) => setNewAdminName(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Contraseña:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={newAdminPass1}\r\n            onChange={(e) => setNewAdminPass1(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Confirmar Contraseña:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={newAdminPass2}\r\n            onChange={(e) => setNewAdminPass2(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" style={{ marginTop: '10px' }}>Registrar</button>\r\n      </form>\r\n      <h3>Administradores Registrados</h3>\r\n      <ul style={{ listStyle: 'none', padding: 0 }}>\r\n        {admins.map(admin => (\r\n          <li key={admin.id} style={{ marginBottom: '10px', border: '1px solid #ccc', padding: '10px' }}>\r\n            <p>Nombre: {admin.Nombre}</p>\r\n            <button onClick={() => handleDelete(admin.id)}>Eliminar</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}