{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DPC\\\\Desktop\\\\sistema-ventas\\\\migracion-node-react\\\\frontend\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState({});\n  const fetchCart = async () => {\n    // Optionally implement fetching cart from backend if persisted\n  };\n  const addToCart = async (codigo, cantidad) => {\n    try {\n      const response = await fetch('/api/cart/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          codigo,\n          cantidad\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setCart(prev => ({\n          ...prev,\n          [codigo]: {\n            producto: codigo,\n            cantidad\n          }\n        }));\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          error: data.error\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Error de conexión'\n      };\n    }\n  };\n  const removeFromCart = async codigo => {\n    try {\n      const response = await fetch(`/api/cart/${codigo}`, {\n        method: 'DELETE'\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setCart(prev => {\n          const newCart = {\n            ...prev\n          };\n          delete newCart[codigo];\n          return newCart;\n        });\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          error: data.error\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Error de conexión'\n      };\n    }\n  };\n  const clearCart = async () => {\n    try {\n      const response = await fetch('/api/cart', {\n        method: 'DELETE'\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setCart({});\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          error: data.error\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Error de conexión'\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"NFGnZJXrHtOOeNPI2HX7AhtE0sQ=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","fetchCart","addToCart","codigo","cantidad","response","fetch","method","headers","body","JSON","stringify","data","json","ok","prev","producto","success","error","removeFromCart","newCart","clearCart","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DPC/Desktop/sistema-ventas/migracion-node-react/frontend/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState({});\r\n\r\n  const fetchCart = async () => {\r\n    // Optionally implement fetching cart from backend if persisted\r\n  };\r\n\r\n  const addToCart = async (codigo, cantidad) => {\r\n    try {\r\n      const response = await fetch('/api/cart/add', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ codigo, cantidad }),\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setCart(prev => ({ ...prev, [codigo]: { producto: codigo, cantidad } }));\r\n        return { success: true };\r\n      } else {\r\n        return { success: false, error: data.error };\r\n      }\r\n    } catch (error) {\r\n      return { success: false, error: 'Error de conexión' };\r\n    }\r\n  };\r\n\r\n  const removeFromCart = async (codigo) => {\r\n    try {\r\n      const response = await fetch(`/api/cart/${codigo}`, { method: 'DELETE' });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setCart(prev => {\r\n          const newCart = { ...prev };\r\n          delete newCart[codigo];\r\n          return newCart;\r\n        });\r\n        return { success: true };\r\n      } else {\r\n        return { success: false, error: data.error };\r\n      }\r\n    } catch (error) {\r\n      return { success: false, error: 'Error de conexión' };\r\n    }\r\n  };\r\n\r\n  const clearCart = async () => {\r\n    try {\r\n      const response = await fetch('/api/cart', { method: 'DELETE' });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setCart({});\r\n        return { success: true };\r\n      } else {\r\n        return { success: false, error: data.error };\r\n      }\r\n    } catch (error) {\r\n      return { success: false, error: 'Error de conexión' };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cart, addToCart, removeFromCart, clearCart }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}